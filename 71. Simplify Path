Given an absolute path for a file (Unix-style), simplify it.

For example,
path = "/home/", => "/home"
path = "/a/./b/../../c/", => "/c"


/*
condition1: if ".", do nothing
condition2: if "..", pop stack
condition3: if "other", push String to stack
*/
public class Solution {
    public String simplifyPath(String path) {
        String[] list = path.split("/");
        Stack<String> stack = new Stack<>();
        for (int i=0; i<list.length; i++) {
            if (list[i].equals(".") || list[i].length()==0) continue;
            else if (!list[i].equals("..")) stack.push(list[i]);
            else {
                if (!stack.isEmpty()) stack.pop();
            }
        }
        
        // use temp stack to reverse stack order (first in last out)
        Stack<String> temp = new Stack<>();
        StringBuilder ans = new StringBuilder();
        while (!stack.isEmpty()) {
            temp.push(stack.pop());
        }
        while (!temp.isEmpty()) {
            ans.append("/" + temp.pop());
        }
        // if ans is empty, return "/"
        if (ans.length()==0) {
            ans.append("/");
        }
        return ans.toString();
    }
}
