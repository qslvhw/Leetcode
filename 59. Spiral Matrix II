Given an integer n, generate a square matrix filled with elements from 1 to n2 in spiral order.
For example,
Given n = 3,

You should return the following matrix:
[
 [ 1, 2, 3 ],
 [ 8, 9, 4 ],
 [ 7, 6, 5 ]
]


public class Solution {
    public int[][] generateMatrix(int n) {
        int[][] matrix = new int[n][n];
        int num=n*n;
        int left=0, right=n-1, top=0, bottom=n-1;
        int k=1;
        while (left<right && top<bottom) {
            for (int i=left; i<right; i++) {
                matrix[top][i]=k++;
            }
            for (int i=top; i<bottom; i++) {
                matrix[i][right]=k++;
            }
            for (int i=right; i>left; i--) {
                matrix[bottom][i]=k++;
            }
            for (int i=bottom; i>top; i--) {
                matrix[i][left]=k++;
            }
            left++;
            right--;
            top++;
            bottom--;
        }
        if (n%2!=0) {
            matrix[n/2][n/2]=k;
        }
        return matrix;
    }
}
