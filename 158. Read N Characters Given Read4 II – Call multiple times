The API: int read4(char *buf) reads 4 characters at a time from a file.
The return value is the actual number of characters read. For example, it returns 3 if there is only 3 characters left in the file.
By using the read4 API, implement the function int read(char *buf, int n) that reads n characters from the file.
Note:
The read function may be called multiple times.


// For example, file is "abcdefg", when use 157 version, the output will be "abc","ef", which is wrong. because everytime call read4,
// the index of buffer will move to next position. In order to keep the right index, we set bufSize and bufIndex to keep the file correct.

public class Solution extends Reader4 {
    /**
     * @param buf Destination buffer
     * @param n   Maximum number of characters to read
     * @return    The number of characters read
     */
     private char[] temp = new char[4];
     private int bufSize = 4;
     private int bufIndex = 4;
     public int read(char[] buf, int n) {
          int i=0;
		
		     while (i<n) {
              if (bufIndex>=bufSize) {     // for example, after "abc", index is 4, read file again.
				           bufSize = read4(temp);
				           bufIndex = 0;          // after first call read4 function, "defg" remains in file, bufIndex becomes 0.
				           if (bufSize==0) break;
			        }
			        buf[i] = temp[bufIndex];
			        bufIndex++;
			        i++;
		     }
		     return i;
	   }
}
