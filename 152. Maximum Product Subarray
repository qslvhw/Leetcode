Find the contiguous subarray within an array (containing at least one number) which has the largest product.
For example, given the array [2,3,-2,4],
the contiguous subarray [2,3] has the largest product = 6.

/* for example {2,3,-2,4,-2,-1,2}
 * max: 6  -2  4  96  8   2
 * min: 3 -12 -48 -8 -96 -192
 * everytime compare max and ans, save larger number to ans.
*/

class Solution {
    public int maxProduct(int[] nums) {
        if (nums==null || nums.length==0) return 0;
        int ans = nums[0];
        int[] max = new int[nums.length];
        int[] min = new int[nums.length];
        max[0]=nums[0]; min[0]=nums[0];
        
        for (int i=1; i<nums.length; i++) {
            if (nums[i]>0) {
                max[i] = Math.max(nums[i], nums[i]*max[i-1]);
                min[i] = Math.min(nums[i], nums[i]*min[i-1]);
            } else {
                max[i] = Math.max(nums[i], nums[i]*min[i-1]);
                min[i] = Math.min(nums[i], nums[i]*max[i-1]);
            }
            ans = Math.max(ans, max[i]);
        }
        return ans;
    }
}
