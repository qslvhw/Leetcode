Given preorder and inorder traversal of a tree, construct the binary tree.

     4
    / \
   2   6
  / \ / 
 1  3 5

inorder:  1,2,3,4,5,6
preorder: 4,2,1,3,6,5

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public TreeNode buildTree(int[] preorder, int[] inorder) {
        return helper(preorder, 0, inorder, 0, inorder.length-1);
    }
    public TreeNode helper(int[] preorder, int index, int[] inorder, int start, int end) {
        if (index>preorder.length-1 || start>end) return null;
        TreeNode root = new TreeNode(preorder[index]);
        int k = 0;
        for (int i=start; i<=end; i++) {
            if (inorder[i] == root.val) {
                k=i;
                break;
            }
        }
        int len = k-start+1;
        root.left = helper(preorder, index+1, inorder, start, k-1);
        root.right = helper(preorder, index+len, inorder, k+1, end);
        return root;
    }
}
