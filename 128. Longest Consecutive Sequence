Given an unsorted array of integers, find the length of the longest consecutive elements sequence.

For example,
Given [100, 4, 200, 1, 3, 2],
The longest consecutive elements sequence is [1, 2, 3, 4]. Return its length: 4.
Your algorithm should run in O(n) complexity.

// we cannot use sort() because sort takes O(nlogn) complexity. 
// hashSet and hashTable takes O(n) complexity for every operation. 
class Solution {
    public int longestConsecutive(int[] nums) {
        if (nums==null || nums.length==0) return 0;
        
        Set<Integer> set = new HashSet<>();
        for (int n : nums) {
            set.add(n);
        }
        
        int max=1;
        for (int n: nums) {
            int cnt=1;
            int left = n-1;     // the elements are not consecutive if n-1 or n+1 not existing in set.
            int right = n+1;
            while (set.contains(left)) {
                cnt++;
                set.remove(left);
                left--;
            }
            while (set.contains(right)) {
                cnt++;
                set.remove(right);
                right++;
            }
            max = Math.max(cnt, max);
        }
        return max;
    }
}
