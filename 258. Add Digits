Given a non-negative integer num, repeatedly add all its digits until the result has only one digit.
For example:
Given num = 38, the process is like: 3 + 8 = 11, 1 + 1 = 2. Since 2 has only one digit, return it.

Follow up:
Could you do it without any loop/recursion in O(1) runtime?

class Solution {
    public int addDigits(int num) {
        
        while (num/10>0) {
            int sum=0;
            while (num>0) {
                sum += num%10;
                num /= 10;
            }
            num = sum;
        }
        return num;
    }
}


// 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
// 1 2 3 4 5 6 7 8 9 1  2  3  4  5  6  7  8  9  1  2
the remainder of num%9 is answer. when 9/9, the remainder is 0, in order to obtain 9, (n-1)%9+1 should be operated.
class Solution {
    public int addDigits(int num) {
        return (num-1)%9+1;
    }
}
