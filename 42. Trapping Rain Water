Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it is able to trap after raining.

For example, 
Given [0,1,0,2,1,0,1,3,2,1,2,1], return 6.



public class Solution {
    public int trap(int[] height) {
        if (height==null || height.length<=1) return 0;
        int len = height.length;
        int[] left = new int[len];
        int[] right = new int[len];
        
        left[0]=height[0];
        for (int i=1; i<len; i++) {
            if (height[i]>left[i-1]) {
                left[i]=height[i];
            } else {
                left[i] = left[i-1];
            }
        }
        
        right[len-1]=height[len-1];
        for (int j=len-2; j>=0; j--) {
            if (height[j]>right[j+1]) {
                right[j] = height[j];
            } else {
                right[j] = right[j+1];
            }
        }
        
        int sum=0;
        for (int k=0; k<len; k++) {
            sum += Math.min(left[k], right[k])-height[k];
        }
        return sum;
    }
}
