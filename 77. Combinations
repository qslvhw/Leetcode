Given two integers n and k, return all possible combinations of k numbers out of 1 ... n.
For example,
If n = 4 and k = 2, a solution is:
[
  [2,4],
  [3,4],
  [2,3],
  [1,2],
  [1,3],
  [1,4],
]

// DFS

public class Solution {
    public List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> ans = new ArrayList<>();
        List<Integer> list = new ArrayList<>();
        helper(1, n, k, list, ans);
        return ans;
    }
    public void helper(int index, int n, int k, List<Integer> list, List<List<Integer>> ans) {
        if (list.size()==k) {
            ans.add(new ArrayList<>(list));
            return;
        }
        for (int i=index; i<=n; i++) {
            list.add(i);
            helper(i+1, n, k, list, ans);
            list.remove(list.size()-1);
        }
    }
}
