Rotate an array of n elements to the right by k steps.
For example, with n = 7 and k = 3, the array [1,2,3,4,5,6,7] is rotated to [5,6,7,1,2,3,4].
Note:
Try to come up as many solutions as you can, there are at least 3 different ways to solve this problem.
Hint:
Could you do it in-place with O(1) extra space?


class Solution {
    public void rotate(int[] nums, int k) {
        if (nums==null || nums.length<=1) return;
        int len = nums.length;
        k = k%len;            // deal with corner case: [1,2,3] k=4. output should be [3,1,2]
        reverse(nums, 0, len-k-1);  // 4,3,2,1,5,6,7
        reverse(nums, len-k, len-1); // 4,3,2,1,7,6,5
        reverse(nums, 0, len-1);  // 5,6,7,1,2,3,4
        
    }
    public void reverse(int[] nums, int i, int j) {
        while (i<j) {
            int temp = nums[i];
            nums[i] = nums[j];
            nums[j] = temp;
            i++;
            j--;
        }
    }
}
