Follow up for "Find Minimum in Rotated Sorted Array":
What if duplicates are allowed?

Would this affect the run-time complexity? How and why?
// this would affect runtime. The worst case is: nums = [1,1,1,1,...,1,0,1,1,...,1] that array exits a 0. run time is O(n).

// the fake bs.
class Solution {
    public int findMin(int[] nums) {
        int left = 0;
        int right = nums.length-1;
        while (left<right) {
            int mid = left+(right-left)/2;
            if (nums[mid]<nums[right]) {
                right = mid;
            } else if (nums[mid] > nums[right]) {
                left = mid+1;
            } else {
                right--;
            }
        }
        return nums[left];
    }
}
// better solution: only use one loop for the worst case.
class Solution {
    public int findMin(int[] nums) {
        for (int i = 1; i < nums.length; i++) {
            if (nums[i] < min)
                min = nums[i];
        }
        return min;
    }
}
