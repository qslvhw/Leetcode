Given inorder and postorder traversal of a tree, construct the binary tree.


     4
    / \
   2   6
  / \ /
 1  35
 
 inorder:   1 2 3 4 5 6
 postorder: 1 3 2 5 6 4
 

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public TreeNode buildTree(int[] inorder, int[] postorder) {
        return helper(inorder, 0, inorder.length-1, postorder, 0, postorder.length-1);
    }
    public TreeNode helper(int[] inorder, int inStart, int inEnd, int[] postorder, int poStart, int poEnd) {
        if (inStart > inEnd || poStart>poEnd) return null;
        
        TreeNode root = new TreeNode(postorder[poEnd]);
        int index = 0;
        for (int i=inStart; i<=inEnd; i++) {
            if (inorder[i] == root.val) {
                index = i;
            }
        }
        int len = index-inStart;
        root.left = helper(inorder, inStart, index-1, postorder, poStart, poStart+len-1);
        root.right = helper(inorder, index+1, inEnd, postorder, poStart+len, poEnd-1);
        return root;
    }
}
