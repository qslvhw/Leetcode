There are N gas stations along a circular route, where the amount of gas at station i is gas[i].
You have a car with an unlimited gas tank and it costs cost[i] of gas to travel from station i to its next station (i+1). 
You begin the journey with an empty tank at one of the gas stations.
Return the starting gas station's index if you can travel around the circuit once, otherwise return -1.


// have two sum for determine. if total gas < 0, it cannot make it a circular route.
// if sum < 0 during the loop, then discard the calculated station, sum = 0, denote start as i+1. return start at the end.

class Solution {
    public int canCompleteCircuit(int[] gas, int[] cost) {
        int sum = 0;
        int totGas = 0;
        int start = 0;
        for (int i=0; i<gas.length; i++) {
            sum = sum + gas[i] - cost[i];
            totGas = totGas + gas[i] - cost[i];
            if (sum < 0) {
                sum = 0;
                start = i+1;
            }
        }
        if (totGas<0) return -1;
        return start;
    }
}
