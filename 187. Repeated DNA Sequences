All DNA is composed of a series of nucleotides abbreviated as A, C, G, and T, for example: "ACGAATTCCG". When studying DNA, it is sometimes useful to identify repeated sequences within the DNA.
Write a function to find all the 10-letter-long sequences (substrings) that occur more than once in a DNA molecule.
For example,
Given s = "AAAAACCCCCAAAAACCCCCCAAAAAGGGTTT",
Return:
["AAAAACCCCC", "CCCCCAAAAA"].

// corner case: AAAAAAAAAAA (11 'A')
// solution: AAAAAAAAAA (10 'A')
// be sure not add repeated sequence in ans, like the wrong return ans is:[AAAAAAAAAA, AAAAAAAAAA];


class Solution {
    public List<String> findRepeatedDnaSequences(String s) {
        List<String> ans = new ArrayList<>();
        Set<String> set = new HashSet<>();
        if (s.length()<10) return ans;
        
        for (int i=0; i<s.length()-9; i++) {
            String temp = s.substring(i, i+10);
            if (set.contains(temp)) {
                if (!ans.contains(temp)) {
                    ans.add(temp);
                }
            } else {
                set.add(temp);
            }
        }
        return ans;
    }
}
