Given two integers representing the numerator and denominator of a fraction, return the fraction in string format.
If the fractional part is repeating, enclose the repeating part in parentheses.

For example,
Given numerator = 1, denominator = 2, return "0.5".
Given numerator = 2, denominator = 1, return "2".
Given numerator = 2, denominator = 3, return "0.(6)".

// use hashmap to save remainder and its position. if 0 occurence, the fraction part is repeating.

class Solution {
    public String fractionToDecimal(int numerator, int denominator) {
        if (numerator == 0) return "0";
        if (denominator == 0) return "";
        
        String ans = "";
        if ((numerator<0) ^ (denominator<0)) ans += "-";
        
        long num = numerator, den = denominator;
        num = Math.abs(num);
        den = Math.abs(den);
        
        long digit = num/den;
        ans += String.valueOf(digit);
        long re = num%den*10;
        if (re==0) return ans;
        
        ans += ".";
        HashMap<Long, Integer> map = new HashMap<>();
        while (re!=0) {
            if (map.containsKey(re)) {
                int index = map.get(re);
                String p1 = ans.substring(0, index);
                String p2 = ans.substring(index, ans.length());
                ans = p1 + "(" + p2 + ")";
                return ans;
            }
            map.put(re, ans.length());
            digit = re/den;
            ans += String.valueOf(digit);
            re = re%den*10;
        }
        return ans;
    }
}
