Given a roman numeral, convert it to an integer.
Input is guaranteed to be within the range from 1 to 3999.

class Solution {
    public int romanToInt(String s) {
        HashMap<Character, Integer> map = new HashMap<>();
        map.put('I',1);
        map.put('V',5);
        map.put('X',10);
        map.put('L',50);
        map.put('C',100);
        map.put('D',500);
        map.put('M',1000);
        
        int len = s.length();
        int ans = map.get(s.charAt(len-1));
        for (int i=len-2; i>=0; i--) {
            if (map.get(s.charAt(i)) >= map.get(s.charAt(i+1))) {
                ans += map.get(s.charAt(i));
            } else {
                ans -= map.get(s.charAt(i));
            }
        }
        return ans;
    }
}

// faster but the same idea. using another array to record the integer of every element in s
class Solution {
    public int romanToInt(String s) {
        int[] arr = new int[s.length()];
        for (int i=0; i<s.length(); i++) {
            switch (s.charAt(i)) {
                case 'I':
                    arr[i]=1;
                    break;
                case 'V':
                    arr[i]=5;
                    break;
                case 'X':
                    arr[i]=10;
                    break;
                case 'L':
                    arr[i]=50;
                    break;
                case 'C':
                    arr[i]=100;
                    break;
                case 'D':
                    arr[i]=500;
                    break;
                case 'M':
                    arr[i]=1000;
                    break;
            }
        }
        int ans=0;
        for (int i=0; i<arr.length-1; i++) {
            if (arr[i] < arr[i+1]) {
                ans -= arr[i];
            } else {
                ans += arr[i];
            }
        }
        return ans+arr[arr.length-1];
    }
}
